version: '3'
services:
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    container_name: mongodb
    volumes:
      - ./db:/data/db
    networks:
      - my-network
  
  rabbitmq:
    image: rabbitmq:3.10-rc-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    container_name: rabbitmq
    networks:
      - my-network

  product:
    build:
      dockerfile: Dockerfile
      context: ./product
    container_name: product
    restart: on-failure
    ports:
      - 8002:8002
    depends_on:  
      - mongodb
      - rabbitmq
    volumes:
      - .:/app
      - /app/product/node_modules
    env_file:
      - ./product/.env
    networks:
      - my-network

  customer:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - 8001:8001
    restart: on-failure
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - .:/app
      - /app/customer/node_modules
    env_file:
      - ./customer/.env
    networks:
      - my-network

  shopping:
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 5
        window: 60s
    build: 
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    restart: on-failure
    ports:
      - 8003:8003
    depends_on:
      - mongodb
      - rabbitmq
    volumes:
      - .:/app
      - /app/shopping/node_modules
    env_file:
      - ./shopping/.env
    networks:
      - my-network

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - product
      - shopping
      - customer
    ports:
      - 80:80
    networks:
      - my-network

networks:
  my-network:
    driver: bridge